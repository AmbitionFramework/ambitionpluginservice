using Almanna;

namespace PluginService.Model.DB.Entity {
	
	/**
	 * Almanna Entity for table "plugin_install".
	 * Generated by almanna-generate.
	 */
	public class PluginInstall : Almanna.Entity {
		public override string entity_name { owned get { return "plugin_install"; } }
		public int plugin_install_id { get; set; }
		public int plugin_id { get; set; }
		public string version { get; set; }
		public string ambition_version { get; set; }
		public string ip_address { get; set; }
		public DateTime date_created { get; set; }
		
		public override void register_entity() {
			add_column( new Column<int>.with_name_type( "plugin_install_id", "int4" ) );
			columns["plugin_install_id"].size = 4;
			columns["plugin_install_id"].is_sequenced = true;
			
			add_column( new Column<int>.with_name_type( "plugin_id", "int4" ) );
			columns["plugin_id"].size = 4;
			
			add_column( new Column<string>.with_name_type( "version", "varchar" ) );
			columns["version"].is_nullable = true;
			
			add_column( new Column<string>.with_name_type( "ambition_version", "varchar" ) );
			columns["ambition_version"].is_nullable = true;
			
			add_column( new Column<string>.with_name_type( "ip_address", "varchar" ) );
			
			add_column( new Column<DateTime>.with_name_type( "date_created", "timestamp" ) );
			columns["date_created"].is_nullable = true;
			
			try {
				set_primary_key("plugin_install_id");
			} catch (EntityError e) {
				stderr.printf( "Error adding primary key to entity: %s\n", e.message );
			}
		}
	}
}
